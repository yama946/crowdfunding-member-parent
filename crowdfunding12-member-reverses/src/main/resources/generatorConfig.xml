<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--    反编译配置文件-->
    <!-- mybatis-generator:generate -->
    <context id="atguiguTables" targetRuntime="MyBatis3">
        <commentGenerator>
            <!-- 是否去除自动生成的注释true:是;false:否-->
            <property name="suppressAllComments" value="true" />
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码-->
        <jdbcConnection
                driverClass="com.mysql.jdbc.Driver"
                connectionURL="jdbc:mysql://localhost:3306/project_crowd"
                userId="root"
                password="yanruyi">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和NUMERIC 类型解析为Integer，为true 时把
        JDBC DECIMAL
        和NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false" />
        </javaTypeResolver>
        <!-- targetProject:生成Entity 类的路径-->
        <javaModelGenerator targetProject=".\src\main\java" targetPackage="com.yama.crowd.entity.po">
            <!-- enableSubPackages:是否让schema 作为包的后缀-->
            <property name="enableSubPackages" value="false" />
            <!-- 从数据库返回的值被清理前后的空格-->
            <property name="trimStrings" value="true" />
        </javaModelGenerator>
        <!-- targetProject:XxxMapper.xml 映射文件生成的路径-->
        <sqlMapGenerator targetProject=".\src\main\java"
                         targetPackage="com.yama.crowd.mapper">
            <!-- enableSubPackages:是否让schema 作为包的后缀-->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>
        <!-- targetPackage：Mapper 接口生成的位置-->
        <javaClientGenerator type="XMLMAPPER"
                             targetProject=".\src\main\java"
                             targetPackage="com.yama.crowd.mapper">
            <!-- enableSubPackages:是否让schema 作为包的后缀-->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>
        <!-- 数据库表名字和我们的entity 类对应的映射指定-->
<!--       根据阿里的标准：像PO、VO、DO、DTO这种类型的，不需要进行驼峰式命名处理-->
        <table tableName="t_type" domainObjectName="TypePO" />
        <table tableName="t_tag" domainObjectName="TagPO" />
        <table tableName="t_project" domainObjectName="ProjectPO" />
        <table tableName="t_project_item_pic" domainObjectName="ProjectItemPicPO" />
        <table tableName="t_member_launch_info" domainObjectName="MemberLaunchInfoPO" />
        <table tableName="t_return" domainObjectName="ReturnPO" />
        <table tableName="t_member_confirm_info" domainObjectName="MemberConfirmInfoPO" />
    </context>
</generatorConfiguration>